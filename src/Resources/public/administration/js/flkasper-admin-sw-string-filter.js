!function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/bundles/flkasperadminswstringfilter/",r(r.s="xY0y")}({xY0y:function(e,t,r){"use strict";r.r(t);var n=Shopware.Component,i=Shopware.Data.Criteria;n.register("sw-string-filter",{template:'{% block sw_string_filter %}\n    <sw-base-filter\n        :title="filter.label"\n        :active="active"\n        :show-reset-button="!!filter.value"\n        class="sw-string-filter"\n        @filter-reset="resetFilter"\n    >\n        {% block sw_string_filter_content %}\n            <sw-text-field\n                class="sw-string-filter__input"\n                v-model="filter.value"\n                :placeholder="filter.placeholder"\n                @change="updateFilter"\n            ></sw-text-field>\n        {% endblock sw_string_filter_content %}\n    </sw-base-filter>\n{% endblock sw_string_filter %}\n',props:{filter:{type:Object,required:!0},active:{type:Boolean,required:!0},comparator:{type:String,required:!1,default:"contains",validValues:["equals","contains"],validator:function(e){return["equals","contains"].includes(e)}}},data:function(){return{stringValue:null}},watch:{"filter.value":{handler:function(){this.filter.value&&(this.stringValue=""+this.filter.value)}},active:function(e){e||this.resetFilter()}},methods:{updateFilter:function(e){if(e){if(e!==this.stringValue){var t=null;if("equals"===this.comparator)t=[i.equals(this.filter.property,e)];else t=[i.contains(this.filter.property,e)];this.$emit("filter-update",this.filter.name,t,e)}}else this.resetFilter()},resetFilter:function(){this.stringValue=null,this.$emit("filter-reset",this.filter.name,this.stringValue)}}})}});